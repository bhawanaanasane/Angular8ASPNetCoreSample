// <auto-generated />
using System;
using FLA.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FLA.Data.Migrations
{
    [DbContext(typeof(DBContextFLA))]
    partial class DBContextFLAModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FLA.Core.Domain.BaseTable.BillTo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ClientId")
                        .HasColumnType("bigint");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("EDI")
                        .HasColumnType("bit");

                    b.Property<bool>("Factor")
                        .HasColumnType("bit");

                    b.Property<string>("FaxNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvoiceEmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("InvoicePreferenceId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("StateProvinceId")
                        .HasColumnType("bigint");

                    b.Property<long>("TermsId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserLoginId")
                        .HasColumnType("bigint");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("invoicePreference")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StateProvinceId");

                    b.ToTable("BillTo");
                });

            modelBuilder.Entity("FLA.Core.Domain.BaseTable.BillToContacts", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("ActiveFlag")
                        .HasColumnType("bit");

                    b.Property<long>("BillToId")
                        .HasColumnType("bigint");

                    b.Property<long>("ClientId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailNotification")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SMSNotification")
                        .HasColumnType("bit");

                    b.Property<long>("UserLoginId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("BillToId");

                    b.ToTable("BillToContacts");
                });

            modelBuilder.Entity("FLA.Core.Domain.BaseTable.PickupDelivery", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ClientId")
                        .HasColumnType("bigint");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FaxNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Port")
                        .HasColumnType("bit");

                    b.Property<long?>("PortsId")
                        .HasColumnType("bigint");

                    b.Property<long?>("StateProvinceId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("StateProvinceId");

                    b.ToTable("PickupDeliveries");
                });

            modelBuilder.Entity("FLA.Core.Domain.BaseTable.PickupDeliveryContacts", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("ActiveFlag")
                        .HasColumnType("bit");

                    b.Property<long>("ClientId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailNotification")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("PickupDeliveryId")
                        .HasColumnType("bigint");

                    b.Property<bool>("SMSNotification")
                        .HasColumnType("bit");

                    b.Property<long>("UserLoginId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("PickupDeliveryId");

                    b.ToTable("PickupDeliveryContacts");
                });

            modelBuilder.Entity("FLA.Core.Domain.BaseTable.PortLogin", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ClientId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("PortsId")
                        .HasColumnType("bigint");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PortsId");

                    b.ToTable("PortLogins");
                });

            modelBuilder.Entity("FLA.Core.Domain.BaseTable.Ports", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CheckPort")
                        .HasColumnType("bit");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ClientId")
                        .HasColumnType("bigint");

                    b.Property<string>("ContactNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("PortLoginFlag")
                        .HasColumnType("bit");

                    b.Property<string>("PortName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PortZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("StateProvinceId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserLoginId")
                        .HasColumnType("bigint");

                    b.Property<string>("WebsiteURL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("StateProvinceId");

                    b.ToTable("Ports");
                });

            modelBuilder.Entity("FLA.Core.Domain.BaseTable.SalesPerson", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ClientId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("StateProvinceId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("dateOfBirth")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("SalesPeople");
                });

            modelBuilder.Entity("FLA.Core.Domain.ChatDetail.ChatMessages", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ClientId")
                        .HasColumnType("bigint");

                    b.Property<string>("ContainerNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("DriverId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReceiverDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRecieved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSend")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSenderDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("MessageId")
                        .HasColumnType("bigint");

                    b.Property<bool>("OrderHeader")
                        .HasColumnType("bit");

                    b.Property<string>("OrderNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SenderType")
                        .HasColumnType("int");

                    b.Property<long>("SenderTypeId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("MessageId");

                    b.ToTable("ChatMessages");
                });

            modelBuilder.Entity("FLA.Core.Domain.ChatDetail.Message", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ClientId")
                        .HasColumnType("bigint");

                    b.Property<string>("ContainerNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<long>("DriverId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<long>("MediaType")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("MessageTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("OrderHeader")
                        .HasColumnType("bit");

                    b.Property<string>("OrderNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ReadTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("SenderType")
                        .HasColumnType("int");

                    b.Property<long>("SenderTypeId")
                        .HasColumnType("bigint");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("FLA.Core.Domain.Clients.Client", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ClientPermissionsId")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("CompanyImage")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FaxNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StartingDriverCodeNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StartingOrderNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("StateProvinceId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClientPermissionsId");

                    b.HasIndex("StateProvinceId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("FLA.Core.Domain.Clients.ClientPermissions", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<bool>("Availability")
                        .HasColumnType("bit");

                    b.Property<long>("ClientId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DriverApp")
                        .HasColumnType("bit");

                    b.Property<bool>("EDI")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("OrderEntry")
                        .HasColumnType("bit");

                    b.Property<bool>("QuickBooks")
                        .HasColumnType("bit");

                    b.Property<bool>("SMSUpdate")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("ClientPermissions");
                });

            modelBuilder.Entity("FLA.Core.Domain.Clients.FactorCompany", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ClientId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FactorAddress1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FactorAddress2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FactorCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FactorFaxNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FactorPhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("FactorState")
                        .HasColumnType("bigint");

                    b.Property<string>("FactorZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FactorsCompany")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("FactorCompanies");
                });

            modelBuilder.Entity("FLA.Core.Domain.Directory.Country", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AllowsBilling")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowsShipping")
                        .HasColumnType("bit");

                    b.Property<long>("DisplayOrder")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("NumericIsoCode")
                        .HasColumnType("bigint");

                    b.Property<bool>("Published")
                        .HasColumnType("bit");

                    b.Property<bool>("SubjectToVat")
                        .HasColumnType("bit");

                    b.Property<string>("ThreeLetterIsoCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TwoLetterIsoCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("FLA.Core.Domain.Directory.StateProvince", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Abbreviation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CountryId")
                        .HasColumnType("bigint");

                    b.Property<long>("DisplayOrder")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Published")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("StateProvinces");
                });

            modelBuilder.Entity("FLA.Core.Domain.Drivers.Driver", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("ARBFlag")
                        .HasColumnType("bit");

                    b.Property<bool>("ActiveDriver")
                        .HasColumnType("bit");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ApportionedPlatesExpiry")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CHPInspectionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ClassALicenseFlag")
                        .HasColumnType("bit");

                    b.Property<long>("ClientId")
                        .HasColumnType("bigint");

                    b.Property<bool>("CompanyInsuredFlag")
                        .HasColumnType("bit");

                    b.Property<long>("CountryId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DMVDateAdd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DMVDateDelete")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateLeft")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateStarted")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DoublesLicenseFlag")
                        .HasColumnType("bit");

                    b.Property<string>("DriverCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DriverLiabilityExpiry")
                        .HasColumnType("datetime2");

                    b.Property<string>("DriverLiabilityInsuranceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DriverLicenseExpiry")
                        .HasColumnType("datetime2");

                    b.Property<string>("DriverLicenseNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("DriverTypeId")
                        .HasColumnType("bigint");

                    b.Property<string>("EINNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmergencyContactName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmergencyPhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmodalFlag")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FuelCardNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HazardousLicenseFlag")
                        .HasColumnType("bit");

                    b.Property<string>("HomePhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InsurenceExpiry")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LeaseDateExpiry")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LiabilityInsuranceEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LiabilityInsuranceStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MedicalCard")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("MedicalCardExpiry")
                        .HasColumnType("datetime2");

                    b.Property<string>("MobilePhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("OccInsuranceEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("OccInsuranceStartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OperatorType")
                        .HasColumnType("int");

                    b.Property<long>("Owner_Company_Driver")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("PDTRLA")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PDTRLB")
                        .HasColumnType("datetime2");

                    b.Property<string>("RFIDNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SSN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SmartPhoneFlag")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SmokeCheckDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("StateProvinceId")
                        .HasColumnType("bigint");

                    b.Property<bool>("StatusFlag")
                        .HasColumnType("bit");

                    b.Property<bool>("TankerLicenseFlag")
                        .HasColumnType("bit");

                    b.Property<string>("TractorLicense")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TriplesLicenseFlag")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("TruckInspectionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TruckMake")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TruckOwnerFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TruckOwnerLastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TruckOwnerPhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TruckRegDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("TwicCardExpiry")
                        .HasColumnType("datetime2");

                    b.Property<bool>("UIIAFlag")
                        .HasColumnType("bit");

                    b.Property<long>("UserLogID")
                        .HasColumnType("bigint");

                    b.Property<string>("VINNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("StateProvinceId");

                    b.ToTable("Drivers");
                });

            modelBuilder.Entity("FLA.Core.Domain.Drivers.DriverLogin", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClientCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ClientId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("DriverId")
                        .HasColumnType("bigint");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DriverLogins");
                });

            modelBuilder.Entity("FLA.Core.Domain.Drivers.DrugScreen", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ClientId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("DriverId")
                        .HasColumnType("bigint");

                    b.Property<bool>("FailFlag")
                        .HasColumnType("bit");

                    b.Property<decimal>("InvoiceAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("InvoiceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("PassFlag")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ScreenDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ScreenType")
                        .HasColumnType("int");

                    b.Property<long>("ScreenTypeId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("DriverId");

                    b.ToTable("DrugScreens");
                });

            modelBuilder.Entity("FLA.Core.Domain.Drivers.TruckInspection", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ClientId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("DriverId")
                        .HasColumnType("bigint");

                    b.Property<bool>("FailFlag")
                        .HasColumnType("bit");

                    b.Property<DateTime>("InspectionDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("InvoiceAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("InvoiceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("PassFlag")
                        .HasColumnType("bit");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("DriverId");

                    b.ToTable("TruckInspections");
                });

            modelBuilder.Entity("FLA.Core.Domain.Mobile.ProofOfDelivery", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ClientId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("DispatchId")
                        .HasColumnType("bigint");

                    b.Property<long>("DriverId")
                        .HasColumnType("bigint");

                    b.Property<long>("PickupDeliveryContactsId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ReceiveDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReceiverName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("SignatureImg")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DispatchId");

                    b.HasIndex("PickupDeliveryContactsId");

                    b.ToTable("ProofOfDeliveries");
                });

            modelBuilder.Entity("FLA.Core.Domain.Orders.Availability", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Available")
                        .HasColumnType("bit");

                    b.Property<long>("ClientId")
                        .HasColumnType("bigint");

                    b.Property<long>("ContainersId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("CustomsHold")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CutOffDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ETA")
                        .HasColumnType("datetime2");

                    b.Property<bool>("ExtraHold")
                        .HasColumnType("bit");

                    b.Property<bool>("FDAHold")
                        .HasColumnType("bit");

                    b.Property<bool>("FeeDueHold")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FirstDayAvailable")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FreightSSLHold")
                        .HasColumnType("bit");

                    b.Property<bool>("HazmatHold")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastChecked")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastFreeDay")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<long>("StatusId")
                        .HasColumnType("bigint");

                    b.Property<bool>("StorageChargesHold")
                        .HasColumnType("bit");

                    b.Property<bool>("TMF")
                        .HasColumnType("bit");

                    b.Property<bool>("TerminalHold")
                        .HasColumnType("bit");

                    b.Property<decimal?>("TotalFees")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("USDAHold")
                        .HasColumnType("bit");

                    b.Property<bool>("XrayHold")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ContainersId");

                    b.ToTable("Availabilities");
                });

            modelBuilder.Entity("FLA.Core.Domain.Orders.Chassis", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ChassisNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ClientId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("RentalCompanyId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("RentalCompanyId");

                    b.ToTable("Chassis");
                });

            modelBuilder.Entity("FLA.Core.Domain.Orders.Containers", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("ChassisId")
                        .HasColumnType("bigint");

                    b.Property<long>("ClientId")
                        .HasColumnType("bigint");

                    b.Property<string>("ContainerNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("OrderId")
                        .HasColumnType("bigint");

                    b.Property<bool>("POPChassisFlag")
                        .HasColumnType("bit");

                    b.Property<string>("SealNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("SizeId")
                        .HasColumnType("bigint");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<long>("StatusId")
                        .HasColumnType("bigint");

                    b.Property<long?>("Temperature")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("SizeId");

                    b.ToTable("Containers");
                });

            modelBuilder.Entity("FLA.Core.Domain.Orders.Order", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BillToID")
                        .HasColumnType("bigint");

                    b.Property<string>("BillofLading")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BookingNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrokerRefNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ClientId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("DeliveryID")
                        .HasColumnType("bigint");

                    b.Property<string>("DriverNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Import_ExportId")
                        .HasColumnType("bigint");

                    b.Property<int>("Import_ExportStatus")
                        .HasColumnType("int");

                    b.Property<bool>("InvoiceExceptionFlag")
                        .HasColumnType("bit");

                    b.Property<string>("InvoiceNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("OrderNumber")
                        .HasColumnType("bigint");

                    b.Property<int>("OrderStatus")
                        .HasColumnType("int");

                    b.Property<long>("OrderStatusId")
                        .HasColumnType("bigint");

                    b.Property<long>("PickupID")
                        .HasColumnType("bigint");

                    b.Property<string>("PoNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ReturnLocationID")
                        .HasColumnType("bigint");

                    b.Property<bool>("ReturnPickup")
                        .HasColumnType("bit");

                    b.Property<long?>("SalesPersonId")
                        .HasColumnType("bigint");

                    b.Property<long?>("SalesRepID")
                        .HasColumnType("bigint");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<long>("StatusId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("FLA.Core.Domain.Orders.RentalCompany", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ClientId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("State")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<long>("ZipCode")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("RentalCompanies");
                });

            modelBuilder.Entity("FLA.Core.Domain.Orders.Size", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ClientId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("DropdownUse")
                        .HasColumnType("bit");

                    b.Property<string>("EIDCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FLACode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Sizes");
                });

            modelBuilder.Entity("FLA.Core.Domain.Permissions.FormName", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Tittle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FormNames");
                });

            modelBuilder.Entity("FLA.Core.Domain.Permissions.Permission", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ClientId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Delete")
                        .HasColumnType("bit");

                    b.Property<long>("FormNameId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Modify")
                        .HasColumnType("bit");

                    b.Property<bool>("Read")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("FLA.Core.Domain.Permissions.PermissionRoleMapping", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ClientId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("PermissionId")
                        .HasColumnType("bigint");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("PermissionId");

                    b.HasIndex("RoleId");

                    b.ToTable("PermissionRoleMappings");
                });

            modelBuilder.Entity("FLA.Core.Domain.Permissions.Role", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ClientId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("FLA.Core.Domain.Scheduling.ContainerTracking", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ClientId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("DispatchId")
                        .HasColumnType("bigint");

                    b.Property<long>("DriverId")
                        .HasColumnType("bigint");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ContainerTrackings");
                });

            modelBuilder.Entity("FLA.Core.Domain.Scheduling.Dispatch", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ActionDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ApptDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApptNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApptTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ClientId")
                        .HasColumnType("bigint");

                    b.Property<long>("ContainersId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateTimeAssigned")
                        .HasColumnType("datetime2");

                    b.Property<long>("DriverId")
                        .HasColumnType("bigint");

                    b.Property<long>("DropLocationId")
                        .HasColumnType("bigint");

                    b.Property<double?>("LoadMoney")
                        .HasColumnType("float");

                    b.Property<long>("LoadStatus")
                        .HasColumnType("bigint");

                    b.Property<long>("PickupDeliveryId")
                        .HasColumnType("bigint");

                    b.Property<long>("SegmentTypeId")
                        .HasColumnType("bigint");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<long>("StatusId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("UserLoginId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Dispatches");
                });

            modelBuilder.Entity("FLA.Core.Domain.Scheduling.DriverDispachDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Check")
                        .HasColumnType("bit");

                    b.Property<long>("ClientId")
                        .HasColumnType("bigint");

                    b.Property<string>("ContainerNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("DeliveryId")
                        .HasColumnType("bigint");

                    b.Property<long>("DispatchId")
                        .HasColumnType("bigint");

                    b.Property<string>("DriverNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvoiceNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("To")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("TypeId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("DriverDispachDetails");
                });

            modelBuilder.Entity("FLA.Core.Domain.Scheduling.PayType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddOnDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PayAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("PayTypes");
                });

            modelBuilder.Entity("FLA.Core.Domain.Scheduling.SegmentType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("OrderSequence")
                        .HasColumnType("bigint");

                    b.Property<bool>("TerminationFlag")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("SegmentTypes");
                });

            modelBuilder.Entity("FLA.Core.Domain.Security.TwilioCredential", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountSid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AuthToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShaKey")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TwilioCredentials");
                });

            modelBuilder.Entity("FLA.Core.Domain.Users.UserLogin", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<long>("ClientId")
                        .HasColumnType("bigint");

                    b.Property<string>("ContactNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsSystemAccount")
                        .HasColumnType("bit");

                    b.Property<string>("LastIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("LoggedIn")
                        .HasColumnType("bit");

                    b.Property<long>("ParentId")
                        .HasColumnType("bigint");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.Property<string>("SystemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TimeOutDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserLoginGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("UserLogins");
                });

            modelBuilder.Entity("FLA.Core.Domain.BaseTable.BillTo", b =>
                {
                    b.HasOne("FLA.Core.Domain.Directory.StateProvince", "StateProvince")
                        .WithMany()
                        .HasForeignKey("StateProvinceId");
                });

            modelBuilder.Entity("FLA.Core.Domain.BaseTable.BillToContacts", b =>
                {
                    b.HasOne("FLA.Core.Domain.BaseTable.BillTo", "BillTo")
                        .WithMany()
                        .HasForeignKey("BillToId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FLA.Core.Domain.BaseTable.PickupDelivery", b =>
                {
                    b.HasOne("FLA.Core.Domain.Directory.StateProvince", "StateProvince")
                        .WithMany()
                        .HasForeignKey("StateProvinceId");
                });

            modelBuilder.Entity("FLA.Core.Domain.BaseTable.PickupDeliveryContacts", b =>
                {
                    b.HasOne("FLA.Core.Domain.BaseTable.PickupDelivery", "PickupDelivery")
                        .WithMany()
                        .HasForeignKey("PickupDeliveryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FLA.Core.Domain.BaseTable.PortLogin", b =>
                {
                    b.HasOne("FLA.Core.Domain.BaseTable.Ports", "Ports")
                        .WithMany()
                        .HasForeignKey("PortsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FLA.Core.Domain.BaseTable.Ports", b =>
                {
                    b.HasOne("FLA.Core.Domain.Directory.StateProvince", "StateProvince")
                        .WithMany()
                        .HasForeignKey("StateProvinceId");
                });

            modelBuilder.Entity("FLA.Core.Domain.ChatDetail.ChatMessages", b =>
                {
                    b.HasOne("FLA.Core.Domain.ChatDetail.Message", "Message")
                        .WithMany()
                        .HasForeignKey("MessageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FLA.Core.Domain.Clients.Client", b =>
                {
                    b.HasOne("FLA.Core.Domain.Clients.ClientPermissions", null)
                        .WithMany("Client")
                        .HasForeignKey("ClientPermissionsId");

                    b.HasOne("FLA.Core.Domain.Directory.StateProvince", "StateProvince")
                        .WithMany()
                        .HasForeignKey("StateProvinceId");
                });

            modelBuilder.Entity("FLA.Core.Domain.Directory.StateProvince", b =>
                {
                    b.HasOne("FLA.Core.Domain.Directory.Country", "Country")
                        .WithMany("StateProvinces")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FLA.Core.Domain.Drivers.Driver", b =>
                {
                    b.HasOne("FLA.Core.Domain.Directory.StateProvince", "StateProvince")
                        .WithMany()
                        .HasForeignKey("StateProvinceId");
                });

            modelBuilder.Entity("FLA.Core.Domain.Drivers.DrugScreen", b =>
                {
                    b.HasOne("FLA.Core.Domain.Drivers.Driver", "Driver")
                        .WithMany("DrugScreens")
                        .HasForeignKey("DriverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FLA.Core.Domain.Drivers.TruckInspection", b =>
                {
                    b.HasOne("FLA.Core.Domain.Drivers.Driver", "Driver")
                        .WithMany("TruckInspections")
                        .HasForeignKey("DriverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FLA.Core.Domain.Mobile.ProofOfDelivery", b =>
                {
                    b.HasOne("FLA.Core.Domain.Scheduling.Dispatch", "Dispatch")
                        .WithMany()
                        .HasForeignKey("DispatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FLA.Core.Domain.BaseTable.PickupDeliveryContacts", "PickupDeliveryContacts")
                        .WithMany()
                        .HasForeignKey("PickupDeliveryContactsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FLA.Core.Domain.Orders.Availability", b =>
                {
                    b.HasOne("FLA.Core.Domain.Orders.Containers", "Containers")
                        .WithMany()
                        .HasForeignKey("ContainersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FLA.Core.Domain.Orders.Chassis", b =>
                {
                    b.HasOne("FLA.Core.Domain.Orders.RentalCompany", "RentalCompany")
                        .WithMany()
                        .HasForeignKey("RentalCompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FLA.Core.Domain.Orders.Containers", b =>
                {
                    b.HasOne("FLA.Core.Domain.Orders.Order", "orders")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FLA.Core.Domain.Orders.Size", "Size")
                        .WithMany()
                        .HasForeignKey("SizeId");
                });

            modelBuilder.Entity("FLA.Core.Domain.Permissions.PermissionRoleMapping", b =>
                {
                    b.HasOne("FLA.Core.Domain.Permissions.Permission", "Permission")
                        .WithMany()
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FLA.Core.Domain.Permissions.Role", "Role")
                        .WithMany("PermissionRoleMapping")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FLA.Core.Domain.Users.UserLogin", b =>
                {
                    b.HasOne("FLA.Core.Domain.Permissions.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
